<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link href="/css/checkout.css" rel="stylesheet">
  <title><%= title %></title>
</head>

<body data-restaurant-id="<%= restaurant ? restaurant.restaurant_id : '' %>">

  <!-- Navbar -->
  <%- include('partials/navbar') %>
  <br>

  <div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="row payment-container">
      
<!-- QR Code Section -->
<div class="col-md-6 qr-section">
  <br>
  <h2 class="text-primary mb-4">QRCode ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h2>

  <!-- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ô‡πâ‡∏ô‡∏¢‡πâ‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° -->
  <h4 class="text-center text-danger fw-bold">
      ‡∏´‡πâ‡∏≤‡∏°‡πÇ‡∏≠‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô | ‡∏´‡πâ‡∏≤‡∏°‡πÇ‡∏≠‡∏ô‡∏Ç‡∏≤‡∏î 
      <br>
      ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏≠‡∏ô <%= totalPrice.toFixed(2) %> ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!!
  </h4>

  <img src="<%= qrCodeImage || '/images/default-qrcode.png' %>" alt="QR Code ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤" id="qrCodeImage" class="img-fluid">
  
  <p class="text-muted mt-1 text-center fw-bold">
    ‚úÖ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πä‡∏∞‡πÜ<br>
    ‚ùå ‡∏´‡∏≤‡∏Å‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á <br>
    **‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏î‡πâ ‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£**
  </p>
  
  <button class="btn btn-success w-100 mt-3" onclick="downloadQRCode()">üì• ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å QR Code</button>
  
  <p class="capture-note mt-3 text-center text-muted">‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÅ‡∏Ñ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏ó‡∏ô</p>
</div>

      <!-- Upload Section -->
      <div class="col-md-6 upload-section">
        <h5>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h5>
        <form id="uploadSlipForm" enctype="multipart/form-data">
          <div class="mb-3">
            <label for="paymentSlip" class="form-label">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ:</label>
            <input class="form-control" type="file" id="paymentSlip" name="paymentSlip" accept="image/*" required>
            <small class="form-text text-muted">
              ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 3MB ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
            </small>
          </div>
          <button type="button" class="btn btn-primary btn-upload mt-3" onclick="uploadSlip()">‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏•‡∏¥‡∏õ</button>
          <button type="button" class="btn btn-warning w-100 mt-2 py-2" onclick="window.history.back()">‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</button>
        </form>
        <p class="text-danger text-center fw-bold mt-4">
          ‚è≥ ‡∏™‡∏•‡∏¥‡∏õ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 15 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡∏°‡∏¥‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏ô‡∏µ‡πâ ‚è≥
      </p>
      </div>
      
      
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    async function checkRestaurantStatus() {
      const restaurantId = document.body.getAttribute("data-restaurant-id");
  
      if (!restaurantId || restaurantId === "null" || restaurantId === "undefined") {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö restaurantId");
        return;
      }
  
      try {
        const response = await fetch(`/api/check-restaurant-status/${restaurantId}`);
        const data = await response.json();
        console.log("API ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤:", data);
  
        if (data.isClosed) {
          console.log("‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏õ‡∏¥‡∏î -> ‡πÅ‡∏™‡∏î‡∏á SweetAlert2 ‡πÅ‡∏•‡∏∞ Redirect");
          Swal.fire({
            icon: "warning",
            title: "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß",
            text: "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏õ‡∏¥‡∏î‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô",
            confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
          }).then(() => {
            history.replaceState(null, "", "/restaurant");
            window.location.href = "/restaurant";
          });
  
          // ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏ñ‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î
          document.querySelectorAll(".btn-upload").forEach(btn => btn.setAttribute("disabled", "true"));
          document.getElementById("paymentSlip").setAttribute("disabled", "true");
        }
      } catch (error) {
        console.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ:", error);
      }
    }
  
    async function uploadSlip() {
      let formData = new FormData();
      let fileInput = document.getElementById("paymentSlip");
      let restaurantId = document.body.getAttribute("data-restaurant-id");
      let accountId = "<%= user ? user.id : '' %>";
  
      console.log("‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Session:");
      console.log("restaurantId:", restaurantId);
      console.log("accountId:", accountId);
  
      if (!restaurantId || restaurantId === "null" || restaurantId === "undefined") {
        Swal.fire("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î! ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤", "error");
        return;
      }
  
      if (!accountId || accountId === "" || accountId === "undefined") {
        Swal.fire("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î! ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", "error");
        return;
      }
  
      if (fileInput.files.length === 0) {
        Swal.fire("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ", "warning");
        return;
      }
  
      let file = fileInput.files[0];
      if (!file.type.startsWith("image/")) {
        Swal.fire("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û!", "error");
        return;
      }
  
      formData.append("paymentSlip", file);
      formData.append("restaurantId", restaurantId);
      formData.append("accountId", accountId);
  
      console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API...");
      console.log("restaurantId:", restaurantId);
      console.log("accountId:", accountId);
  
      try {
        const response = await fetch("/upload-slip", { method: "POST", body: formData });
        const data = await response.json();
        console.log("API Response:", data);
  
        if (data.success) {
          Swal.fire({
            title: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
            text: "‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
            icon: "success",
            confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á"
          }).then(() => {
            window.location.href = "/order-success";
          });
        } else {
          Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", data.message, "error");
        }
      } catch (error) {
        console.error("Fetch Error:", error);
        Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", "error");
      }
    }
  
    document.addEventListener("DOMContentLoaded", () => {
      checkRestaurantStatus(); // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤
      setInterval(checkRestaurantStatus, 2000); // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ã‡πâ‡∏≥‡∏ó‡∏∏‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    });


    function downloadQRCode() {
      const qrImage = document.getElementById("qrCodeImage");
      const canvas = document.createElement("canvas");
      const ctx = canvas.getContext("2d");
      const img = new Image();

      img.crossOrigin = "anonymous"; // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
      img.src = qrImage.src;

      img.onload = function () {
          // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á canvas ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
          canvas.width = img.width;
          canvas.height = img.height;
          ctx.drawImage(img, 0, 0);

          // ‡πÅ‡∏õ‡∏•‡∏á canvas ‡πÄ‡∏õ‡πá‡∏ô Blob
          canvas.toBlob(function (blob) {
              const link = document.createElement("a");
              const url = URL.createObjectURL(blob); // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Blob
              link.href = url;
              link.download = "qrcode.png"; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
              document.body.appendChild(link);
              link.click(); // ‡∏Å‡∏î‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
              document.body.removeChild(link); // ‡∏•‡∏ö‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å
              URL.revokeObjectURL(url); // ‡∏•‡∏ö URL ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
          }, "image/png"); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô PNG
      };
  }
  
  </script>
  

</body>
</html>
