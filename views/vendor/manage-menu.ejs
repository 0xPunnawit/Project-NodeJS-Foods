<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- เพิ่ม SweetAlert2 -->
    <title>จัดการเมนู</title>

    <style>
        body {
            padding-top: 80px; /* ป้องกัน navbar ทับเนื้อหา */
        }

        /* ปรับขนาดปุ่มให้เหมาะกับมือถือ */
        .btn {
            font-size: 18px;
            padding: 12px;
            width: 100%;
        }

        /* ปรับ input และ select ให้ใหญ่ขึ้น */
        input, select {
            font-size: 18px;
            padding: 10px;
        }

        /* ปรับ Card ให้วางเรียงกันแทนตาราง */
        .menu-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #fff;
        }

        .menu-card input, .menu-card select {
            width: 100%;
        }
    </style>
</head>
<body>
    
    <%- include('../partials/navbar') %>

    <div class="container">
        <a href="/vendor/dashboard" class="btn btn-secondary w-100 mt-2">กลับ</a>
        <h2 class="text-center mt-3">จัดการเมนู</h2>

        <% if (menus.length === 0) { %>
            <p class="text-center">ยังไม่มีเมนู</p>
        <% } else { %>
            <div class="row">
                <% menus.forEach(menu => { %>
                    <div class="col-12">
                        <div class="menu-card">
                            <label>ชื่อเมนู</label>
                            <input type="text" id="name-<%= menu.menu_item_id %>" value="<%= menu.name %>" class="form-control">
                            
                            <label class="mt-2">ราคา</label>
                            <input type="number" id="price-<%= menu.menu_item_id %>" value="<%= menu.price %>" class="form-control">

                            <label class="mt-2">สถานะ</label>
                            <select id="availability-<%= menu.menu_item_id %>" class="form-select">
                                <option value="มี" <%= menu.availability === 'มี' ? 'selected' : '' %>>มี</option>
                                <option value="ไม่มี" <%= menu.availability === 'ไม่มี' ? 'selected' : '' %>>ไม่มี</option>
                            </select>

                            <div class="mt-3 d-flex gap-2">
                                <button onclick="updateMenu(<%= menu.menu_item_id %>)" class="btn btn-primary">บันทึก</button>
                                <a href="/vendor/manage-menu-options/<%= menu.menu_item_id %>" class="btn btn-info">จัดการตัวเลือกเมนู</a>
                                <button onclick="deleteMenu(<%= menu.menu_item_id %>)" class="btn btn-danger">ลบ</button>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        <% } %>
    </div>

    <script>
        function updateMenu(menuId) {
            const name = document.getElementById(`name-${menuId}`).value;
            const price = document.getElementById(`price-${menuId}`).value;
            const availability = document.getElementById(`availability-${menuId}`).value;

            fetch(`/vendor/menu/update`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ menuId, name, price, availability })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "สำเร็จ!",
                        text: "อัปเดตเมนูสำเร็จ",
                        icon: "success",
                        confirmButtonText: "ตกลง"
                    }).then(() => {
                        location.reload(); // รีโหลดหน้าเมื่อกดตกลง
                    });
                } else {
                    Swal.fire({
                        title: "เกิดข้อผิดพลาด",
                        text: data.message,
                        icon: "error",
                        confirmButtonText: "ตกลง"
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "เกิดข้อผิดพลาด",
                    text: "ไม่สามารถเชื่อมต่อเซิร์ฟเวอร์ได้",
                    icon: "error",
                    confirmButtonText: "ตกลง"
                });
            });
        }

        function deleteMenu(menuId) {
            Swal.fire({
                title: "ยืนยันการลบ?",
                text: "เมนูนี้และตัวเลือกเมนูที่เกี่ยวข้องจะถูกลบทั้งหมด! คุณแน่ใจหรือไม่?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "ใช่, ลบเลย!",
                cancelButtonText: "ยกเลิก"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/vendor/menu/delete/${menuId}`, {
                        method: "DELETE"
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire("ลบสำเร็จ!", "เมนูและตัวเลือกที่เกี่ยวข้องถูกลบเรียบร้อย", "success").then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire("เกิดข้อผิดพลาด!", data.message, "error");
                        }
                    })
                    .catch(error => {
                        Swal.fire("เกิดข้อผิดพลาด!", "ไม่สามารถเชื่อมต่อเซิร์ฟเวอร์ได้", "error");
                    });
                }
            });
        }
        
    </script>
</body>
</html>
